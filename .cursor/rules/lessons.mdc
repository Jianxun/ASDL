---
description: 
globs: 
alwaysApply: true
---
# Overview

## How To Use This Document
This document maintains project-specific lessons and best practices. It serves as institutional knowledge that evolves over time.

### For AI Agents
- Reference these lessons when relevant to current tasks
- Propose adding new lessons when discovering useful patterns or solutions
- Format new lessons consistently with existing entries
- Include concrete examples with each lesson

### For Users
- Request lesson additions by saying "Add lesson about [topic]"
- Reference specific lessons by saying "Check lessons about [topic]"
- Review and refine lessons periodically as part of maintenance

## Best Practice for Updating This Document
- New lessons should be added at the bottom of the file
- Each lesson should have a clear, descriptive heading
- Format lessons consistently with bullet points for readability
- Include concrete examples from the project when possible
- Link to relevant source code or documentation when helpful
- Add references to external resources that provided the solution

# Lessons

## How to Fix Test Suite Import Errors

### Problem
The test suite was failing with `ModuleNotFoundError: No module named 'src'` errors. This occurred because the test files used absolute imports from the `src` directory (e.g., `from src.asdl.parser import ASDLParser`), but the Python interpreter was not configured to know where `src` was located.

### Bad Solution: `sys.path` Manipulation
A common but incorrect workaround is to add `sys.path` manipulation to the top of each test file:

```python
import sys
from pathlib import Path
# This is an anti-pattern!
sys.path.insert(0, str(Path(__file__).resolve().parents[2]))
```
This is brittle, verbose, and hides the underlying configuration problem.

### Correct Solution: `pyproject.toml` Configuration
The correct and robust solution is to configure the test environment directly in the `pyproject.toml` file. By adding a `pythonpath` setting, we tell `pytest` which directories to add to the Python path before it starts collecting tests.

**Implementation**:

Add the following section to `pyproject.toml`:

```toml
[tool.pytest.ini_options]
pythonpath = ["."]
```

**Reasoning**:
- **`pythonpath = ["."]`**: This tells `pytest` to add the project's root directory (`/workspaces/ASDL/`) to the `PYTHONPATH`.
- Since the root directory is on the path, imports that start from a directory within the root (like `src`) will now resolve correctly. `from src.asdl...` now works as intended everywhere.
- This is a single, centralized configuration that fixes the issue for the entire test suite without modifying individual test files.



