========================================
ASDL YAML Configuration Schema
========================================

root:  # Represents a single ASDL file with its unified modules and optional imports. Each ASDL file is like a library that can be included/imported by other files. The unified modules field contains both primitive and hierarchical modules. The imports field enables dependency resolution across multiple files. The model_alias field provides local shorthand for imported module references.
  file_info: (required)  # Document metadata; does not affect netlisting
    top_module:  <string>  # Default top module name in this ASDL file — default: None
    doc:  <string>  # Human-readable description of the design/library — default: None
    revision:  <string>  # Revision identifier for this document — default: None
    author:  <string>  # Author name or contact — default: None
    date:  <string>  # Date string (free-form or ISO 8601) — default: None
    metadata:  { <string>: any }  # Additional metadata for tools and annotations — default: None
  modules: (required)  { <string>: Module }  # Map of unified module definitions (both primitive and hierarchical)
    modules[*]:  # Unified module definition for both primitive and hierarchical circuits. A Module can be either: - Primitive: Has spice_template, renders as inline SPICE device - Hierarchical: Has instances, renders as .subckt definition These are mutually exclusive - a module cannot have both spice_template and instances.
      doc:  <string>  # Module-level documentation — default: None
      ports:  { <string>: Port }  # Port declarations keyed by port name. Each declared port implicitly defines a net with the same name in the module's interface. Use 'internal_nets' to declare additional local nets. — default: None
        ports[*]:  # Port definition with direction and optional type classification. Port names may contain patterns (e.g., "in_<p,n>") that will be expanded during the pattern expansion phase.
          dir: (required)  <enum: in|out|in_out>  # Port direction classification
          type:  <enum: signal|power|ground|bias|control>  # Optional port type classification; defaults to 'signal' — default: signal
          metadata:  { <string>: any }  # Arbitrary metadata for tools and annotations — default: None
      internal_nets:  [ string ]  # Additional local nets inside the module body. Ports already imply interface nets; use this list for extra internal nodes. — default: None
      parameters:  { <string>: any }  # Module parameters and default values. Parameters may be overridden per-instance via 'Instance.parameters'. — default: None
      variables:  { <string>: any }  # Module variables for computed or derived values; variables are not overridable by instances. — default: None
      spice_template:  <string>  # SPICE device template for primitive modules; implicit placeholder '{name}' resolves to the instance id — default: None
      instances:  { <string>: Instance }  # Map of instance id to Instance for hierarchical modules — default: None
        instances[*]:  # Instance of a unified Module. An Instance represents the usage/instantiation of a Module, which can be either: - Primitive Module (has spice_template) -> generates inline SPICE device - Hierarchical Module (has instances) -> generates subcircuit call in SPICE Mappings and parameters may contain patterns and expressions that will be resolved during the expansion and resolution phases. The metadata field provides extensible metadata storage for: - Design intent annotations: {"purpose": "current mirror", "matching": "critical"} - Layout hints: {"placement": "symmetric", "routing": "minimize_parasitic"} - Optimization directives: {"optimize": ["power", "area"], "constraint": "speed"} - Tool-specific metadata: {"simulator": "spectre", "model_opts": {...}} - Future extensions: Any additional fields can be preserved here
          model: (required)  <string>  # Reference to a Module by key/name
          mappings: (required)  { <string>: string }  # Map from target module's port names to net names. Keys must match the declared port names of the referenced module.
          doc:  <string>  # Instance-level documentation — default: None
          parameters:  { <string>: any }  # Parameter overrides for this instance — default: None
          metadata:  { <string>: any }  # Arbitrary metadata for tools and annotations — default: None
      pdk:  <string>  # PDK identifier associated with this module (informational). Note: automatic .include generation is deprecated and handled outside the generator. — default: None
      metadata:  { <string>: any }  # Arbitrary metadata for tools and annotations — default: None
  imports:  { <string>: string }  # Map of file aliases to .asdl file paths for dependency resolution — default: None
  model_alias:  { <string>: string }  # Local module aliases mapping to imported module references (alias.module_name format) — default: None
  metadata:  { <string>: any }  # Open extension bag; agents should preserve unknown keys — default: None
