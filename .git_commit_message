feat(parser): Implement full location tracking and diagnostic-based error handling

This commit completes the foundational work for the linter and compiler analysis pipeline by refactoring the parser and data structures.

Key changes:
- Implement full location tracking (line/column) for all core data structures: `FileInfo`, `DeviceModel`, `Module`, `Port`, and `Instance`. This was done via TDD with a new `test_location_tracking.py` suite.
- Create a new `diagnostics.py` module with shared data structures (`Diagnostic`, `DiagnosticSeverity`) for standardized error reporting.
- Refactor the `ASDLParser` to emit diagnostics for fatal errors (e.g., YAML syntax errors, invalid top-level structure) instead of raising exceptions. This makes the parser more robust and suitable for tooling.
- Add a new test suite `test_error_handling.py` to verify the new diagnostic-based error reporting in the parser.
- All changes were developed using a strict TDD workflow. 